// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.SchoolDepartment.Infra.DataStruct.Data.Contexts;

#nullable disable

namespace Project.SchoolDepartment.Infra.DataStruct.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221123185453_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("CHAR(11)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<Guid>("CursoGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR(9)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("VARCHAR(160)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("RA")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("CHAR(80)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR(120)");

                    b.Property<Guid>("TurmaGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("CHAR(2)");

                    b.HasKey("Guid");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("CursoGuid");

                    b.HasIndex("RA")
                        .IsUnique();

                    b.HasIndex("TurmaGuid");

                    b.ToTable("Aluno", (string)null);

                    b.HasData(
                        new
                        {
                            Guid = new Guid("c70c3bce-c77a-428a-b8c1-28174b6e0ba6"),
                            Bairro = "Bairro Qualquer",
                            CPF = "11111111111",
                            Cidade = "Cidade Qualquer",
                            CursoGuid = new Guid("a69dda80-aed1-452a-afa7-5c09d4885ba1"),
                            Genero = "Masculino",
                            Logradouro = "Rua Aleatória",
                            Nome = "Eduardo",
                            Numero = 278,
                            RA = "SFHJHSJH46JY54JY6JS54GARGHSTAEFGSJ4T65TRYH48TSRJTJ5THS5TRHGHAEJKDLF846531AHKFSFJ",
                            Sobrenome = "Oliveira da Silva",
                            TurmaGuid = new Guid("43b26e0f-93e9-46ca-a574-c5e0b78c7a3b"),
                            UF = "SP"
                        });
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Curso", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("VARCHAR(180)");

                    b.HasKey("Guid");

                    b.ToTable("Curso", (string)null);

                    b.HasData(
                        new
                        {
                            Guid = new Guid("a69dda80-aed1-452a-afa7-5c09d4885ba1"),
                            Nome = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Telefone", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)");

                    b.HasKey("Guid");

                    b.HasIndex("AlunoGuid");

                    b.ToTable("Telefone", (string)null);

                    b.HasData(
                        new
                        {
                            Guid = new Guid("44a7f03d-3809-4f39-a196-28d1b342c939"),
                            AlunoGuid = new Guid("c70c3bce-c77a-428a-b8c1-28174b6e0ba6"),
                            Numero = "99999999999"
                        },
                        new
                        {
                            Guid = new Guid("5cc10d8b-381e-4f65-8177-e6a452899c09"),
                            AlunoGuid = new Guid("c70c3bce-c77a-428a-b8c1-28174b6e0ba6"),
                            Numero = "88888888888"
                        });
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Turma", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("VARCHAR(5)");

                    b.Property<int>("QuantidadeAlunos")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("CursoGuid");

                    b.ToTable("Turma", (string)null);

                    b.HasData(
                        new
                        {
                            Guid = new Guid("43b26e0f-93e9-46ca-a574-c5e0b78c7a3b"),
                            CursoGuid = new Guid("a69dda80-aed1-452a-afa7-5c09d4885ba1"),
                            DataFim = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Periodo = "Manha",
                            QuantidadeAlunos = 1
                        });
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Aluno", b =>
                {
                    b.HasOne("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Curso", "Curso")
                        .WithMany("Alunos")
                        .HasForeignKey("CursoGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Telefone", b =>
                {
                    b.HasOne("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Aluno", "Aluno")
                        .WithMany("Telefones")
                        .HasForeignKey("AlunoGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Turma", b =>
                {
                    b.HasOne("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Aluno", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Curso", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("Project.SchoolDepartment.Infra.DataStruct.Data.Entities.Turma", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
